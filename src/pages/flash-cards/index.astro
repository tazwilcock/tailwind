---
import Layout from "../../layouts/Layout.astro"
import HomeBtn from "../../components/HomeBtn.astro"
const tabAndMainH1Title = "Web Forms"
---

<Layout title={tabAndMainH1Title}>
   <!-- ----------------------------------------------------------- -->
   <!-- PADDING BOTTOM DIV -->
   <div class="pb-20">
      <!-- ----------------------------------------------------------- -->
      <!-- HOME BUTTON -->
      <div class="pl-5 pt-5">
         <HomeBtn />
      </div>
      <!-- ----------------------------------------------------------- -->
      <!-- PADDING 5 and TEXT CENTER DIV -->
      <div class="p-5 mt-10 max-w-3xl leading-6 font-normal mx-auto text-neutral-300">
         <!-- ----------------------------------------------------------- -->
         <!-- MAIN PAGE H1 TITLE -->
         <h1 class="text-4xl font-semibold text-white font-serif">{tabAndMainH1Title}</h1>
         <!-- ----------------------------------------------------------- -->
         
         <!-- PAGE Intro -->
         
         <p class="max-w-3xl mx-auto my-5">Websites allow the website owner to communicate with the end user. This is typically done through audio, text, images, and video. For example: product name, product description, product image...</p>
         <p class="max-w-3xl mx-auto mb-5">Websites also allow the user to communicate with the website owner. This is typically done through a Web Form. If a customer wants a product they use a form to add it to their cart, and another form to make a purchase.</p>
         <div class="mb-5">
            <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input">MDN DOCS: HTML ELEMENTS: Input Element</a><br>
         <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete">MDN DOCS: HTML ATTRIBUTES: AUTOCOMPLETE</a>
         </div>
         <h3
            class="underline underline-offset-4 decoration-[#BF1363] pb-4 text-white text-xl font-serif"
         >
            Pain vs Reward
         </h3>
         <p class="max-w-3xl mx-auto mb-5">The pain of filling out a form needs to be less than the reward of filling it out. For instance, a reward for filling out a form could be purchasing a product, accessing certain information, being able to attend an event, etc. Make sure that forms are easy or even fun to fill out. </p>
         
         
         <!-- ----------------------------------------------------------- -->
         <!-- MAIN CONTENT -->
         <!-- ----------------------------------------------------------- -->
         <!-- H2 SPECIFIC TOPIC HEADING (Spans Page w/background) -->

         <h2 class="py-5 mt-6 text-3xl font-serif text-white underline decoration-[#BF1363] underline-offset-4">
            6 Best Practices
         </h2>
         <h3 class="underline underline-offset-4 decoration-[#00A7E1] pb-4 text-white text-xl font-serif">
            1. Proper Labeling
         </h3>
         <p class="max-w-3xl mx-auto mb-5"> Every form should have a proper title that accurately describes what it's for. User's need to be able to instantly describe the purpose. Instead of just putting purchase, add what will be purchased: "Purchase Concert Tickets". Never use the word submit for the submit button. Instead state this phrase as if you were the user: "I want to..." the word that comes after to is the word the submit button should say. To go with our last example the submit button would say: "Purchase My Tickets". </p>


         


         <h3 class="underline underline-offset-4 decoration-[#00A7E1] pb-4 pt-2 text-white text-xl font-serif">
            2. Content
         </h3>
         <p class="max-w-3xl mx-auto mb-5"> Forms are BARRIERS THAT STAND BETWEEN THE USER AND WHAT THEY WANT. Only ask <span class="text-pink-500">ESSENTIAL</span> questions. With the example of a user signing up for a community email. Only a name and an email address or maybe even only an email address is essential. Unnessasary form fields would be job title, phone, company name, address...</p>
         <p class="max-w-3xl mx-auto mb-5">NOTE: never put form field labels next to the form field. Always put them above or inside the form field. That way, the eye tracking path makes a straight vertical line from top to bottom.</p>

         <h3 class="underline underline-offset-4 decoration-[#00A7E1] pb-4 pt-2 text-white text-xl font-serif">
            3. Layout
         </h3>
         <p class="max-w-3xl mx-auto mb-5">Use a <span class="text-pink-500">Single Column</span> for forms. Never use multiple columns.</p>
         <p class="max-w-3xl mx-auto mb-5">Note on phone numbers. Use one field to allow for multiple phone number arrangements. Not all phone numbers in all contries are the same length or in the same format.</p>
         <p class="max-w-3xl mx-auto mb-5">Note on Radio Buttons and Dropdowns. Use check boxes or radio buttons when a question has <span class="text-pink-500">5 options or less. </span>Use a dropdown when a question has more than 5 options.</p>

         <h3 class="underline underline-offset-4 decoration-[#00A7E1] pb-4 pt-2 text-white text-xl font-serif">
            4. Inputs
         </h3>
         <p class="max-w-3xl mx-auto mb-5"> Every form should have a proper title that accurately describes what it's for. User's need to be able to instantly describe the purpose. Instead of just putting purchase, add what will be purchased: "Purchase Concert Tickets". Never use the word submit for the submit button. Instead state this phrase as if you were the user: "I want to..." the word that comes after to is the word the submit button should say. To go with our last example the submit button would say: "Purchase My Tickets". </p>
         <p class="max-w-3xl mx-auto mb-5">Placeholder text should not replace labels because once a user starts typing they could forget what they are supposed to be typing. Always have the label visible.</p>
         <p class="max-w-3xl mx-auto mb-5">Order choices logically. For Instance, order days of the week in the right order of course, but also if there isn't a logical sequence use alphabetical order.</p>
         <p class="max-w-3xl mx-auto mb-5">Wrap all inputs in <span class="text-pink-500">LABEL TAGS. </span>This helps with touching small items like check boxes and radio buttons. Users are also able to click or touch the label and not just the input. </p>

         <h3 class="underline underline-offset-4 decoration-[#00A7E1] pb-4 pt-2 text-white text-xl font-serif">
            5. Submissions
         </h3>
         <p class="max-w-3xl mx-auto mb-5"> Never put a reset or clear button on your form. Someone who wants to start over can just reload the page. Another submission tip is to SHOW THE USER a CONFIRMATION message so that they know the submission worked.</p>

         <h3 class="underline underline-offset-4 decoration-[#00A7E1] pb-4 pt-2 text-white text-xl font-serif">
            6. Design
         </h3>
         <p class="max-w-3xl mx-auto mb-5"> Make sure your touch points are at least 44 pixels tall. 45-50px makes it easier for users. Also, group the labels and the proper fields. Group and separate matching labels and fields so they are distinct from other labels and thier fields.</p>
         <p class="max-w-3xl mx-auto mb-5">Here's an example of google's improved form fields:</p>
         <img src="/form-field.png" alt="form-field" width="320px" height="145">

         
         <h2 class="py-5 mt-6 text-3xl font-serif text-white underline decoration-[#BF1363] underline-offset-4">
            Anatomy of a Web Form
         </h2>
         <h3 class="underline underline-offset-4 decoration-[#00A7E1] pb-4 text-white text-xl font-serif">
            Form Tag
         </h3>
         <p class="max-w-3xl mx-auto mb-5"> There are two ways to send collected information back to the server: with a get method or a post method. If you asign a page to an action attribute in the opening form tag, you can build out that page to show appreciation to the user for filling out the form. </p>

         <h3 class="underline underline-offset-4 decoration-[#00A7E1] pb-4 pt-2 text-white text-xl font-serif">
            Common Form Parts
         </h3>
         <p class="max-w-3xl mx-auto mb-5"> User instructions, required, label, type, name, placeholder, kind, autocomplete, title. </p>

         <h3 class="underline underline-offset-4 decoration-[#00A7E1] pb-4 pt-2 text-white text-xl font-serif">
            11 Form Elements
         </h3>
         
         <p class="max-w-3xl mx-auto"> "The form tag "can contain one or more of the following form elements"</p>
         <a class="mb-3 block" href="https://www.w3schools.com/html/html_form_elements.asp">[ W3 Schools ]</a>
         <ul class="list-disc pl-5">
            <li>Input</li>
            <li>Label</li>
            <li>Select</li>
            <li>Textarea</li>
            <li>Button</li>
            <li>Fieldset</li>
            <li>Legend</li>
            <li>Datalist</li>
            <li>Output</li>
            <li>Option</li>
            <li>Optgroup</li>
         </ul>

         <h3 class="underline underline-offset-4 decoration-[#00A7E1] pb-4 pt-2 text-white text-xl font-serif">
            Input
         </h3>
         <p class="max-w-3xl mx-auto mb-5">8 for practice: checkbox, date, email, password, radio, submit, tel, and text.</p>
         <p class="max-w-3xl mx-auto mb-5">Different input types change the keyboard on mobile devices. If you add required, the field must have a value before the browser processes the form. Placeholders gives an example of how a user should provide data. Adding a title attribute creates a tooltip on hover. A name attribute is IMPORTANT because it becomes the container that HOLDS THE VALUE and MOVES it to the database. Always surround an input with a label tag to provide user instructions and allow them to touch the title to select the input. </p>

         <h3 class="underline underline-offset-4 decoration-[#00A7E1] pb-4 pt-2 text-white text-xl font-serif">
            Type Selectors and Pseudo Classes
         </h3>
         <p class="max-w-3xl mx-auto mb-5">Type selectors allow us to give different inputs different styling. Instead of selecting a tag with the tag name, or a class, or an ID, we can select an element by using an attribute. For example, it's type attribute. We do this using square brackets -- input [type=tel]. This way we can select and style multiple form elements at once.</p>
         <p class="max-w-3xl mx-auto mb-5">Pseudo Classes help us visually indicate to a user when they have entered the correct data. If you use input:required you can style the border to be red and let the user know it's required.</p>
         
      </div>


      <!-- FLASH CARDS ----------------------------- -->
      <!-- ----------- -->
      <div class="h-screen"></div>
      <div class="flex flex-col gap-4 md:flex-row flex-wrap max-w-3xl mx-auto text-white">
            <div class="card-container mx-auto h-72 w-56 rounded-xl">
               <div class="card h-full w-full relative cursor-pointer">
                  <div class="front w-full h-full flex flex-col items-center justify-center rounded-xl bg-cover bg-center absolute bg-[#006B8F]">
                     <h3>Front of Card</h3>
                     <p>additional info on back</p>
                  </div>
                  <div class="back h-full w-full absolute flex flex-col items-center justify-center rounded-xl bg-teal-600">
                     <h3>Back of Card</h3>
                     <p>additional info on back</p>
                  </div>
               </div>
            </div>

            <div class="card-container mx-auto h-72 w-56 rounded-xl">
               <div class="card h-full w-full relative cursor-pointer">
                  <div class="front w-full h-full flex flex-col items-center justify-center rounded-xl bg-cover bg-center absolute bg-[#006B8F]">
                     <h3>Front of Card</h3>
                     <p>additional info on back</p>
                  </div>
                  <div class="back h-full w-full absolute flex flex-col items-center justify-center rounded-xl bg-teal-600">
                     <h3>Back of Card</h3>
                     <p>additional info on back</p>
                  </div>
               </div>
            </div>

            <div class="card-container mx-auto h-72 w-56 rounded-xl">
               <div class="card h-full w-full relative cursor-pointer">
                  <div class="front w-full h-full flex flex-col items-center justify-center rounded-xl bg-cover bg-center absolute bg-[#006B8F]">
                     <h3>Front of Card</h3>
                     <p>additional info on back</p>
                  </div>
                  <div class="back h-full w-full absolute flex flex-col items-center justify-center rounded-xl bg-teal-600">
                     <h3>Back of Card</h3>
                     <p>additional info on back</p>
                  </div>
               </div>
            </div>

            <div class="card-container mx-auto h-72 w-56 rounded-xl">
               <div class="card h-full w-full relative cursor-pointer">
                  <div class="front w-full h-full flex flex-col items-center justify-center rounded-xl bg-cover bg-center absolute bg-[#006B8F]">
                     <h3>Front of Card</h3>
                     <p>additional info on back</p>
                  </div>
                  <div class="back h-full w-full absolute flex flex-col items-center justify-center rounded-xl bg-teal-600">
                     <h3>Back of Card</h3>
                     <p>additional info on back</p>
                  </div>
               </div>
            </div>

            <div class="card-container mx-auto h-72 w-56 rounded-xl">
               <div class="card h-full w-full relative cursor-pointer">
                  <div class="front w-full h-full flex flex-col items-center justify-center rounded-xl bg-cover bg-center absolute bg-[#006B8F]">
                     <h3>Front of Card</h3>
                     <p>additional info on back</p>
                  </div>
                  <div class="back h-full w-full absolute flex flex-col items-center justify-center rounded-xl bg-teal-600">
                     <h3>Back of Card</h3>
                     <p>additional info on back</p>
                  </div>
               </div>
            </div>

            <div class="card-container mx-auto h-72 w-56 rounded-xl">
               <div class="card h-full w-full relative cursor-pointer">
                  <div class="front w-full h-full flex flex-col items-center justify-center rounded-xl bg-cover bg-center absolute bg-[#006B8F]">
                     <h3>Front of Card</h3>
                     <p>additional info on back</p>
                  </div>
                  <div class="back h-full w-full absolute flex flex-col items-center justify-center rounded-xl bg-teal-600">
                     <h3>Back of Card</h3>
                     <p>additional info on back</p>
                  </div>
               </div>
            </div>
            
         </div>
         
   </div>
</Layout>

<style>
   
   .card-container {
      perspective: 1170px;
   }
   .card-container:hover > .card {
      transform: rotateY(180deg);
      
   }
   .card {
      transition: transform 1100ms;
      transform-style: preserve-3d;
   }
   .front, .back {
      backface-visibility: hidden;
   }
   .back {
      transform: rotateY(180deg);
   }
</style>

<!-- Credit for toggle button style
https://tailwindcomponents.com/component/toggle-switch
 -->
